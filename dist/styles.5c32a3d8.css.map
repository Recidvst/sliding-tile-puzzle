{"version":3,"sources":["css\\styles.scss"],"names":[],"mappings":"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","file":"styles.5c32a3d8.css","sourceRoot":"..","sourcesContent":[":root {\r\n\t--primary-bg-color: #e3e3e3;\r\n\t--secondary-bg-color: #001d1e;\r\n\t--positive-color: #b4654a;\r\n\t--positive-color-bright: #f2693b;\r\n\t--setback-color: #c2c5bb;\r\n\r\n\t--tile-width: 200px;\r\n\t--columns-num: 4;\r\n}\r\n\r\nbody {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmin-height: 100vh;\r\n\tbackground: var(--secondary-bg-color);\r\n\tfont-family: 'MuseoModerno', cursive;\r\n}\r\n\r\n.title-holder {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tmax-width: 100%;\r\n\tmargin: 15px 0 30px;\r\n\th1 {\r\n\t\tcolor: var(--positive-color-bright);\r\n\t}\r\n\th2 {\r\n    margin: 5px 0;\r\n    font-size: 1.5em;\r\n\t\tcolor: var(--secondary-bg-color);\r\n\t}\t\r\n\th3 {\r\n    margin: 5px 0;\r\n    font-size: 1.5em;\r\n\t\tcolor: var(--secondary-bg-color);\r\n\t}\r\n}\r\n.disclaimer {\r\n\tmargin: 0;\r\n\tmargin-top: auto;\r\n\tcolor: var(--secondary-bg-color);\r\n}\r\n\r\n.sliding-tile-puzzle {\r\n\tposition: relative;\r\n\tpadding: 20px;\r\n\tbackground: var(--primary-bg-color);\r\n\tborder-radius: 4px;\r\n\tborder: 2px solid var(--primary-bg-color);\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr auto;\r\n\tgrid-template-rows: 1fr;\r\n}\r\n\r\n.tile-container {\r\n\tposition: relative;\r\n  display: grid;\r\n  grid-gap: 10px;\r\n\tgrid-template-columns: repeat(var(--columns-num), 1fr);\r\n\tgrid-template-rows: repeat(var(--columns-num), minmax(var(--tile-width), auto));\r\n\twidth: calc( (var(--columns-num) * var(--tile-width)) + calc(var(--columns-num) * 10px) );\r\n\tmax-width: calc( (var(--columns-num) * var(--tile-width)) + calc(var(--columns-num) * 10px) );\r\n\tflex-wrap: wrap;\r\n}\r\n\r\n.tile {\r\n\tdisplay: block;\r\n\tflex: 0 1 auto;\r\n\theight: var(--tile-width);\r\n\twidth: var(--tile-width);\r\n\tborder-radius: 2px;\r\n\tbox-shadow: 1px 1px 3px 0px grey;\r\n\tbackground-size: calc( (var(--columns-num) * var(--tile-width)) + calc(var(--columns-num) * 10px) ) calc( (var(--columns-num) * var(--tile-width)) + calc(var(--columns-num) * 10px) ); // this is the size of the container\r\n\tbackground-position: center; // this should be based on the distance from the container edges\r\n\tbackground-image: url('./../img/lake-cabin.jpg');\r\n\ttransform-origin: center center;\r\n\t// the empty tile\r\n\t&.open, &.empty {\r\n\t\tbackground: transparent;\r\n\t\tbox-shadow: none;\r\n\t\tborder: none;\r\n\t}\r\n\t\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\t// add an effect to the tile here? Wobble or something...\r\n\t}\r\n}\r\n\r\n.controls-container {\r\n\tdisplay: block;\r\n\tdisplay: flex;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\tflex-direction: column;\r\n\tpadding: 0 20px 0 0;\r\n\tbackground: var(--primary-bg-color);\r\n\tborder: 2px solid var(--primary-bg-color);\r\n\tborder-right: none;\r\n\twidth: 100%;\r\n\tmax-width: 300px;\r\n}\r\n// reference image\r\n.reference-img {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tmax-width: calc(100% - 8px);\r\n\tmargin: 5px auto;\r\n\tpadding: 2px;\r\n\tborder: 2px solid var(--secondary-bg-color);\r\n\tborder-radius: 2px;\r\n\tbackground: var(--primary-bg-color);\r\n}\r\n.control-button {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tpadding: 10px 16px;\r\n\tmargin: 5px auto;\r\n\tbackground: var(--positive-color);\r\n\tborder: 1px solid var(--positive-color);\r\n\tcolor: #333;\r\n\tfont-size: 18px;\r\n\tfont-weight: normal;\r\n\tborder-radius: 2px;\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\t// disabled state\r\n\t&:disabled {\r\n\t\tbackground: var(--setback-color);\r\n\t\tborder-color: var(--setback-color);\r\n\t\tcolor: #333;\r\n\t\t&:hover {\r\n\t\t\tcursor: not-allowed;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// swal alerts - custom styling\r\n// buttons\r\n.swal-button {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tpadding: 10px 16px;\r\n\tmargin: 5px auto;\r\n\tbackground-color: var(--positive-color);\r\n\tborder: 1px solid var(--positive-color);\r\n\tcolor: var(--primary-bg-color);\r\n\tfont-size: 18px;\r\n\tfont-weight: normal;\r\n\tborder-radius: 2px;\r\n\t&:hover, &:not([disabled]):hover {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: var(--secondary-bg-color);\r\n\t\tborder-color: var(--secondary-bg-color);\r\n\t}\r\n}\r\n.swal-button--cancel {\r\n\tbackground-color: var(--setback-color);\r\n\tborder-color: var(--setback-color);\r\n\tcolor: #333;\r\n\t&:hover, &:not([disabled]):hover {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: var(--secondary-bg-color);\r\n\t\tborder-color: var(--secondary-bg-color);\r\n\t\tcolor: var(--primary-bg-color);\r\n\t}\r\n}\r\n// icon\r\n.swal-icon--success__line {\r\n\tbackground-color: var(--positive-color);\r\n}\r\n.swal-icon--success__ring {\r\n\tborder-color: rgba(180, 101, 74, 0.75);\r\n}\r\n\r\n// success animation\r\n@keyframes party-fade-in {\r\n  from { opacity: 0 }\r\n  to { opacity: 1 }\r\n}\r\n.notes {\r\n  position: absolute;\r\n  top: calc(50% - 20px);\r\n  left: 50%;\r\n  z-index: -1;\r\n  animation: party-fade-in 100ms 2s linear backwards;\r\n  div {\r\n    position: absolute;\r\n    top: 0;\r\n    left:0;\r\n    $length: 10;\r\n    @for $i from 1 through 12 {\r\n      &:nth-child(#{$i}) {\r\n        animation: notesFade#{$i} (random()*2s+0.5s) (random()*2s) ease-out infinite both;\r\n        color: hsl(($i / $length)*360deg, 50%, 50%);\r\n        font-size: random() * 2rem + 0.5rem;\r\n      }\r\n      @keyframes notesFade#{$i} {\r\n        0% {\r\n          opacity: 0;\r\n        }\r\n        20%{\r\n          opacity: 1;\r\n        }\r\n        100% {\r\n          transform: rotate(random()*50deg - 25deg) translateY(random() * -100px - 100px);\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"]}