{"version":3,"sources":["js/app.js"],"names":["guidGenerator","S4","Math","random","toString","substring","shuffleArray","array","i","length","j","floor","shuffleItems","list","children","appendChild","resetGrid","oldTiles","ul","item","classList","remove","setOpenTile","tiles","rand","add","setImagePositions","container","parentElement","forEach","tile","style","backgroundSize","offsetWidth","offsetHeight","backgroundPosition","offsetLeft","offsetTop","setMemory","memObj","index","getAttribute","puzzleCompleteCheck","memory","document","querySelectorAll","result","every","tileID","isSpaceFree","currentTiles","ind","parseFloat","contains","recursiveFindLowest","cur","sqrt","recursiveFindHighest","swapTiles","currentIndex","swapIndex","tileContainer","querySelector","current","swap","swapItemOne","swapItemTwo","swapElements","obj1","obj2","temp","createElement","parentNode","insertBefore","removeChild","triggerTileMovement","thisTile","findIndex","id","root","movementStatuses","checkTopPromise","Promise","resolve","then","results","top","allow","catch","err","console","error","checkBottomPromise","bottom","checkLeftPromise","leftTile","left","checkRightPromise","rightTile","right","all","Object","keys","constructor","property","shuffleAnimation","tl","TimelineMax","to","scale","rotate","opacity","ease","stagger","grid","from","amount","window","addEventListener","fromTo","x","Power4","easeInOut","startTiles","startButton","getElementById","resetButton","e","target","setTimeout","alert","hasAttribute","setAttribute","removeAttribute"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["// id generator\r\nfunction guidGenerator() {\r\n  var S4 = function() {\r\n     return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n  };\r\n  return (S4()+S4());\r\n}\r\n\r\n// random shufflers\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\nfunction shuffleItems(list) {\r\n\tfor (var i = list.children.length; i >= 0; i--) {\r\n\t\t\tlist.appendChild(list.children[Math.random() * i | 0]);\r\n\t}\r\n}\r\n\r\n// reset grid\r\nfunction resetGrid(oldTiles, list) {\r\n\tconst ul = list;\r\n\tfor (var i = 0; i <= ul.children.length -1; i++) {\r\n\t\tconst item = oldTiles[i];\r\n\t\titem.classList.remove('open');\r\n\t\tul.appendChild(item);\r\n\t}\r\n}\r\n\r\n// set open tile\r\nfunction setOpenTile(tiles) {\r\n\tconst rand = Math.floor(Math.random() * tiles.length);\r\n\ttiles[rand].classList.add('open');\r\n}\r\n\r\n// set background positions\r\nfunction setImagePositions(tiles) {\r\n\tconst container = tiles[0].parentElement; // tile-container\r\n\ttiles.forEach( (tile) => {\r\n\t\t// set image size\r\n\t\ttile.style.backgroundSize = `${container.offsetWidth}px ${container.offsetHeight}px`;\r\n// \t\tset image position\r\n\t\ttile.style.backgroundPosition = `-${tile.offsetLeft}px -${tile.offsetTop}px`;\r\n\t});\r\n}\r\n\r\n// setting memory\r\nfunction setMemory(tiles) {\r\n\tlet memObj = {};\r\n\ttiles.forEach( (tile, index) => {\r\n\t\tmemObj[tile.getAttribute('id')] = {\r\n\t\t\t'index' : index,\r\n\t\t\t'id' : tile.getAttribute('id')\r\n\t\t};\r\n\t});\r\n\treturn memObj; // returns memory object\r\n}\r\n\r\n// check against memory to confirm complete\r\nfunction puzzleCompleteCheck(memory) {\r\n\tconst tiles = [...document.querySelectorAll('.tile')];\r\n\tconst result = tiles.every( (tile, index) => {\r\n\t\t// check if current position matches first position for all tiles\r\n\t\tconst tileID = tile.getAttribute('id');\r\n\t\treturn index === memory[tileID].index;\r\n\t});\r\n\treturn result;\r\n}\r\n\r\n// check if the specified space is free\r\nfunction isSpaceFree(index) {\r\n\tif (index === false ) return false;\r\n\tconst currentTiles = [...document.querySelectorAll('.tile')];\r\n\tconst ind = Math.floor(parseFloat(index)) - 1;\r\n\tif (currentTiles[ind].classList.contains('open')) {\r\n\t\t\treturn {\r\n\t\t\t\t'result': true,\r\n\t\t\t\t'index': Math.floor(parseFloat(index)),\r\n\t\t\t};\r\n\t}\r\n\treturn {\r\n\t\t\t\t'result': false,\r\n\t\t\t\t'index': Math.floor(parseFloat(index)),\r\n\t};\r\n}\r\n\r\n// functions to check if adjacent squares are on the same row or wrapped (e.g. shouldn't move to wrapped adjacent tiles!)\r\nfunction recursiveFindLowest(index, currentTiles) {\r\n\t// keep taking the width of the row away from the current index until we hit below zero\r\n\t// when can't go any lower, test the index value\r\n\t// if this equals 1 (first tile), then the original tile was the left-most in it's row and so shouldn't accept left movements\r\n\tlet cur = index - Math.sqrt(currentTiles.length);\r\n\tif (cur >= 0) {\r\n\t\t\treturn recursiveFindLowest(cur, currentTiles);\r\n\t}\r\n\telse {\r\n\t\t\tif (index === 1) {\r\n\t\t\t\t\treturn false; // this means its a left edge and so not allowed\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t}\r\n}\r\nfunction recursiveFindHighest(index, currentTiles) {\r\n\t// keep adding the width of the row away to the current index until we hit below the number of total tiles\r\n\t// when can't go any higher, test the index value\r\n\t// if this equals the total number of tiles, then the original tile was the right-most in it's row and so shouldn't accept right movements\r\n\tlet cur = index + Math.sqrt(currentTiles.length);\r\n\tif (cur <= currentTiles.length) {\r\n\t\t\treturn recursiveFindHighest(cur, currentTiles);\r\n\t}\r\n\telse {\r\n\t\t\tif (index === currentTiles.length) {\r\n\t\t\t\t\treturn false; // this means its a right edge and so not allowed\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\n// movement functionality fn\r\nfunction swapTiles(currentIndex, swapIndex) {\r\n\t// container and tiles\r\n\tconst tileContainer = document.querySelector('.tile-container');\r\n\tconst currentTiles = [...document.querySelectorAll('.tile')];\r\n\t// reset to zero indexed\r\n\tconst current = currentIndex - 1;\r\n\tconst swap = swapIndex - 1;\r\n\t// items to swap\r\n\tlet swapItemOne = currentTiles[current];\r\n\tlet swapItemTwo =  currentTiles[swap];\r\n\t// fn\r\n\tfunction swapElements(obj1, obj2) {\r\n    // create marker element and insert it where obj1 is\r\n    var temp = document.createElement(\"div\");\r\n    obj1.parentNode.insertBefore(temp, obj1);\r\n    // move obj1 to right before obj2\r\n    obj2.parentNode.insertBefore(obj1, obj2);\r\n    // move obj2 to right before where obj1 used to be\r\n    temp.parentNode.insertBefore(obj2, temp);\r\n    // remove temporary marker node\r\n\t\ttemp.parentNode.removeChild(temp);\r\n\t}\r\n\tswapElements(swapItemOne, swapItemTwo);\r\n}\r\n\r\n// movement trigger fn\r\nfunction triggerTileMovement(thisTile, currentTiles) {\r\n\t// get current position with findIndex\r\n\tconst currentIndex = currentTiles.findIndex( tile => tile.id === thisTile.id) + 1; // otherwise zero index\r\n\t// check for empty spaces\r\n\tconst root = Math.sqrt(currentTiles.length); // get width of rows (always 3x3, 4x4 etc.)\r\n\t// status obj to be filled by promisified checking functions\r\n\tlet movementStatuses = {\r\n\t\t'top': {\r\n\t\t\t'allow': false,\r\n\t\t\t'index': false,\r\n\t\t},\r\n\t\t'bottom': {\r\n\t\t\t'allow': false,\r\n\t\t\t'index': false,\r\n\t\t},\r\n\t\t'left': {\r\n\t\t\t'allow': false,\r\n\t\t\t'index': false,\r\n\t\t},\r\n\t\t'right': {\r\n\t\t\t'allow': false,\r\n\t\t\t'index': false,\r\n\t\t},\r\n\t}\r\n\t\r\n\t// try one tile above (basically go forward by width of rows unless that takes you off the grid)\r\n\tlet checkTopPromise = new Promise(function(resolve) {\r\n\t\tresolve(isSpaceFree((currentIndex - root) >= 1 ? currentIndex - root : false));\r\n\t})\r\n\t.then( (results) => {\r\n\t\tmovementStatuses.top.allow = results.result;\r\n\t\tmovementStatuses.top.index = results.index;\r\n\t})\r\n\t.catch( err => console.error(err));\r\n\t\r\n\t// try one tile below (basically go backwards by width of rows unless that takes you off the grid)\r\n\tlet checkBottomPromise = new Promise(function(resolve) {\r\n\t\tresolve(isSpaceFree((currentIndex + root) <= currentTiles.length ? currentIndex + root : false));\r\n\t})\r\n\t.then( (results) => {\r\n\t\tmovementStatuses.bottom.allow = results.result;\r\n\t\tmovementStatuses.bottom.index = results.index;\r\n\t})\r\n\t.catch( err => console.error(err));\r\n\t\r\n\t// try one tile to the left\r\n\tlet checkLeftPromise = new Promise(function(resolve) {\r\n\t\tlet leftTile = false; // default\r\n\t\t// prevent checking past lowest\r\n\t\tif ((currentIndex - 1) >= 1) {\r\n\t\t\tleftTile = currentIndex - 1;\r\n\t\t\t// don't allow wrap!!!!\r\n\t\t\tif (!recursiveFindLowest(currentIndex, currentTiles)) {\r\n\t\t\t\t\tleftTile = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve(isSpaceFree(leftTile));\r\n\t})\r\n\t.then( (results) => {\r\n\t\tmovementStatuses.left.allow = results.result;\r\n\t\tmovementStatuses.left.index = results.index;\r\n\t})\r\n\t.catch( err => console.error(err));\r\n\t\r\n\t// try one tile to the right\r\n\tlet checkRightPromise = new Promise(function(resolve) {\r\n\t\tlet rightTile = false; // default\r\n\t\t// prevent checking past highest\r\n\t\tif ((currentIndex + 1) <= currentTiles.length) {\r\n\t\t\trightTile = currentIndex + 1;\r\n\t\t\t// don't allow wrap!!!!\r\n\t\t\tif (!recursiveFindHighest(currentIndex, currentTiles)) {\r\n\t\t\t\t\trightTile = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve(isSpaceFree(rightTile));\r\n\t})\r\n\t.then( (results) => {\r\n\t\tmovementStatuses.right.allow = results.result;\r\n\t\tmovementStatuses.right.index = results.index;\r\n\t})\r\n\t.catch( err => console.error(err));\r\n\t\r\n\t// now try the available direction!\r\n\tPromise.all([checkTopPromise, checkBottomPromise, checkLeftPromise, checkRightPromise]).then(() => {\r\n\t\t// loop over movement status object to try moving\r\n\t\tif (Object.keys(movementStatuses).length > 0 && movementStatuses.constructor === Object) {\r\n\t\t\tfor (const property in movementStatuses) {\r\n\t\t\t\tif (movementStatuses[property] && movementStatuses[property].allow === true) {\r\n\t\t\t\t\t// trigger tile swap!\r\n\t\t\t\t\tswapTiles(currentIndex, movementStatuses[property].index); // current tile index + tile index to swap with\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n}\r\n\r\n// shuffle animation\r\nfunction shuffleAnimation() {\r\n\tlet tl = new TimelineMax();\r\n\ttl.to(\".sliding-tile-puzzle .tile\", 1, {scale: 0.75, rotate: '360deg', opacity: 0, ease: \"power3.easeIn\", stagger: { grid: [4,4], from: \"random\", amount: 1}})\r\n\ttl.to(\".sliding-tile-puzzle .tile\", 1, {scale: 1, rotate: '0deg', opacity: 1, ease: \"power3.easeOut\", stagger: { grid: [4,4], from: \"random\", amount: 1}})\r\n}\r\n\r\n// kick off functionality\r\nwindow.addEventListener('load', () => {\r\n\r\n\t// load in animation\r\n\tlet tl = new TimelineMax();\r\n\ttl.fromTo(\".sliding-tile-puzzle\", 1.5, {x: '-100%'}, {x: '0', ease: Power4.easeInOut})\r\n\t.fromTo(\".sliding-tile-puzzle .tile\", 1, {scale: '0', rotate: '-90deg'}, {scale: '1', rotate: '0deg', ease: Power4.easeInOut}, .5)\r\n\r\n\t// init required vars\r\n\tconst startTiles = [...document.querySelectorAll('.tile')];\r\n\tlet memory = [];\r\n\tconst tileContainer = document.querySelector('.tile-container');\r\n\tconst startButton = document.getElementById('startButton');\r\n\tconst resetButton = document.getElementById('resetButton');\r\n\t// set background image positions\r\n\tsetImagePositions(startTiles);\r\n\t// tiles loop\r\n\tstartTiles.forEach( (tile) => {\r\n\t\ttile.id = guidGenerator(); // give IDs\r\n\t\t// add tile click listener\r\n\t\ttile.addEventListener('click', (e) => {\r\n\t\t\tif (!e.target.classList.contains('open')) {\r\n\t\t\t\tconst currentTiles = [...document.querySelectorAll('.tile')];\r\n\t\t\t\t// trigger tile moving to open space\r\n\t\t\t\ttriggerTileMovement(e.target, currentTiles);\r\n\t\t\t\t// check if puzzle now complete\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (puzzleCompleteCheck(memory) && !tileContainer.classList.contains('complete')) {\r\n\t\t\t\t\t\talert('Congratulations, you did it! 👏 🥳 🍾');\r\n\t\t\t\t\t\ttileContainer.classList.add('complete');\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\t// set memory\r\n\tmemory = setMemory(startTiles);\r\n\t// button click listeners\r\n\t// start\r\n\tstartButton.addEventListener('click', (e) => {\r\n\t\tif (!startButton.hasAttribute('disabled')) {\r\n\t\t\tshuffleAnimation();\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tshuffleItems(tileContainer);\r\n\t\t\t\tsetOpenTile(startTiles);\r\n\t\t\t}, 2000);\r\n\t\t\tstartButton.setAttribute('disabled', true);\r\n\t\t}\r\n\t\tif (resetButton.hasAttribute('disabled')) {\r\n\t\t\tresetButton.removeAttribute('disabled');\r\n\t\t}\r\n\t\ttileContainer.classList.remove('complete');\r\n\t});\r\n\t// reset\r\n\tresetButton.addEventListener('click', (e) => {\r\n\t\tconst currentTiles = [...document.querySelectorAll('.tile')];\r\n\t\tif (!resetButton.hasAttribute('disabled')) {\r\n\t\t\tshuffleAnimation();\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tresetGrid(startTiles, tileContainer);\r\n\t\t\t}, 2000);\r\n\t\t\tresetButton.setAttribute('disabled', true);\r\n\t\t}\r\n\t\tif (startButton.hasAttribute('disabled')) {\r\n\t\t\tstartButton.removeAttribute('disabled');\r\n\t\t}\r\n\t\ttileContainer.classList.add('complete');\r\n\t});\r\n}, false);\r\n"]}